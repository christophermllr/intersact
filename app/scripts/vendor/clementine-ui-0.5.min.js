/**
 * Copyright (c) 2010-12 ClementineJS

 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:

 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

Clementine.add("ui",function(e){var t,n,r,i=Clementine.ViewController;t=i.extend({getType:function(){return"modal-view"},presentModalView:function(){return this.add(this._presentModalView,arguments)},_presentModalView:function(e,t){if(this.modalVisible){this.next();return}$("body").append(this._target);for(var n in this._views)this._views[n].load().show();setTimeout(proxy(function(){this._target.addClass("visible"),setTimeout(proxy(function(){this.modalVisible=!0,e&&e.call(t||this),this.next()},this),300)},this),50)},dismissModalView:function(){return this.add(this._dismissModalView,arguments)},_dismissModalView:function(e,t){if(!this.modalVisible){this.next();return}this._target.removeClass("visible"),setTimeout(proxy(function(){this._target.remove();for(var n in this._views)this._views[n].hide().unload();this.modalVisible=!1,e&&e.call(t||this),this.next()},this),300)},onLoad:function(){this.fire("_loaded")},onAppear:function(){this.fire("_appeared")},onDisappear:function(){this.fire("_disappeared")},onUnload:function(){this.fire("_unloaded")}}),n=i.extend({getType:function(){return"multi-view"},setup:function(){var e=this.target.attr("data-default");this.hasView(e)&&(this.activeView=this.getView(e),this.activeName=e,this.target.removeAttr("data-default")),this._super()},activateView:function(e,t){function n(){this.activeView.hide(),this.activeView.unload(),this.activeView=this.getView(e),this.activeView.load(),this.activeView.show()}if(!this.hasView(e))throw"View does not exist";if(this.activeView===this.getView(e)&&this.activeView)return;this.activeName=e,t?setTimeout(proxy(function(){n.call(this)},this),t):n.call(this)},onLoad:function(){this.activeView.load(),this.fire("_loaded")},onAppear:function(){this.activeView.show(),this.target.removeClass("hidden"),this.fire("_appeared")},onDisappear:function(){this.activeView.hide(),this.fire("_disappeared")},onUnload:function(){this.activeView.unload(),this.fire("_unloaded")}}),r=i.extend({getType:function(){return"navigation-view"},popView:function(){return this.add(this._popView,arguments)},_popView:function(e,t,n){if(this.animating||this.viewStack.length<2)return this.next(),!1;this.animating=!0;var r=this.activeView;r._target.addClass("preload").removeClass("active"),this.viewStack.pop();var i=this.viewStack.last();return i._target.addClass("active").removeClass("unload"),i.show(),this.activeView=this.viewStack.last(),setTimeout(proxy(function(){r.hide().unload(),this.animating=!1,t&&t.call(n||this),this.next()},this),e!==undefined?e+200:500),!0},pushView:function(){return this.add(this._pushView,arguments)},_pushView:function(e,t,n,r){if(this.animating)return this.next(),!1;console.log("Pushing: "+e),this.animating=!0;var i=this.activeView;return this.getView(e).load().show().run(function(){this.getView(e)._target.addClass("active").removeClass("preload"),i._target.addClass("unload").removeClass("active")},this,100),this.activeView=this.getView(e),this.viewStack.push(this.getView(e)),setTimeout(proxy(function(){i.hide(),this.animating=!1,n&&n.call(r||this),this.next()},this),t!==undefined?t===0?t:t+200:500),!0},popToRootView:function(){return this.add(this._popToRootView,arguments)},_popToRootView:function(e,t,n){if(this.animating||this.viewStack.length<2)return this.next(),!1;this.animating=!0;for(var r=1;r<this.viewStack.length-1;r++)this.viewStack[r].unload(),this.viewStack[r]._target.removeClass("unload").addClass("preload");var i=this.activeView;i._target.addClass("preload").removeClass("active");var s=this.viewStack[0];return s._target.addClass("active").removeClass("unload"),s.show(),this.activeView=s,this.viewStack=[this.activeView],setTimeout(proxy(function(){i.hide().unload(),this.animating=!1,t&&t.call(n||this),this.next()},this),e!==undefined?e+200:500),!0},onLoad:function(){this.activeView=null,this.viewStack=[];var e=this.attr("default");if(!this.hasView(e))throw'Default View Not Found for "'+this.attr("name")+'"';for(var t in this._views){if(this._views[t].attr("overlay")){this._views[t].load();continue}this._views[t].attr("name")===e?(this.getView(e)._target.addClass("active"),this.getView(e).load(),this.activeView=this.getView(e),this.viewStack=[this.activeView]):this._views[t]._target.removeClass("hidden").addClass("preload")}this.fire("_loaded")},onAppear:function(){var e=this.attr("default");this.activeView.show();for(var t in this._views)this._views[t].attr("overlay")&&this._views[t].show();setTimeout(proxy(function(){this._target.addClass("animated")},this),1e3),this.fire("_appeared")},onDisappear:function(){for(var e=0;e<this.viewStack.length;e++)this.viewStack[e].hide();for(var e in this._views)this._views[e].attr("overlay")&&this._views[e].hide();this._target.addClass("hidden"),this.fire("_disappeared")},onUnload:function(){var e=this.attr("default");for(var t=0;t<this.viewStack.length;t++)this.viewStack[t].unload();for(var n in this._views){if(this._views[n].attr("overlay")){this._views[n].unload();continue}this._views[n]._target.removeClass("unload").removeClass("active").addClass("preload")}this.activeView=this.getView(e),this.viewStack=[this.activeView],this.fire("_unloaded")}}),e.MultiViewController=n,e.NavigationController=r,e.ModalViewController=t},[])